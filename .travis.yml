language: c++
sudo: required
matrix:
  fast_finish: true
  include:
    - os: osx

    # - os: osx
    #   env: COMPILER=clang++
    #   osx_image: xcode7

    - os: osx
      env: COMPILER=clang++ TOOLCHAIN=analyze
      osx_image: xcode7

    # unsupported
    # - os: osx
    #   env: COMPILER=clang++ TSAN=1
    #   osx_image: xcode7

    - os: osx
      env: COMPILER=clang++ ASAN=1
      osx_image: xcode7

    - os: linux
      env: COMPILER=g++-4.8
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-4.8
          - g++-4.8

    # - os: linux
    #   env: COMPILER=g++-4.9
    #   addons:
    #     apt:
    #       sources:
    #       - ubuntu-toolchain-r-test
    #       packages:
    #       - gcc-4.9
    #       - g++-4.9

    # - os: linux
    #   env: COMPILER=g++-5
    #   addons:
    #     apt:
    #       sources:
    #       - ubuntu-toolchain-r-test
    #       packages:
    #       - gcc-5
    #       - g++-5

    - os: linux
      env: COMPILER=g++-5
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-5
          - g++-5
          - valgrind
          - lcov-5

    - os: linux
      env: COMPILER=g++-5 VALGRIND_ENABLED=1
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-5
          - g++-5
          - valgrind

    - os: linux
      env: COMPILER=g++-5 ASAN=1
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-5
          - g++-5

    - os: linux
      compiler: g++-5    
      env: COMPILER=g++-5 TSAN=1
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-5
          - g++-5

    - os: linux
      compiler: clang
      env: COMPILER=clang++-3.7 CLANG_TIDY=1
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-precise-3.7
          packages:
          - clang-3.7
          - libstdc++-5-dev

    - os: linux
      compiler: clang
      env: COMPILER=clang++-3.7 TSAN=1
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-precise-3.7
          packages:
          - clang-3.7
          - libstdc++-5-dev

    - os: linux
      compiler: clang
      env: COMPILER=clang++-3.7 COVERAGE=1
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-precise-3.7
          packages:
          - clang-3.7
          - libstdc++-5-dev


before_script:
- git config --global user.name "Travis-CI"
- git config --global user.email "travis@ci.net"
- git config --global push.default simple

install:
- if [ "$COVERAGE" == 1 ]; then wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz && tar xf lcov_1.11.orig.tar.gz && sudo make -C lcov-1.11/ install && gem install coveralls-lcov ; fi
- if [ "$COMPILER" != "" ]; then export CXX=$COMPILER ; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then (brew install cmake); fi
    
script:
- $CXX --version
- cmake CMakeLists.txt && make VERBOSE=1 && ./.travis.sh

#- cmake CMakeLists.txt && cmake --build . && ./.travis.sh

after_success:
- if [ "$COVERAGE" == 1 ]; then lcov --directory . --capture --output-file coverage.info ; fi
- if [ "$COVERAGE" == 1 ]; then lcov --remove coverage.info '/usr/*' 'lib/*' 'include/boost/*' --output-file coverage.info ; fi
- if [ "$COVERAGE" == 1 ]; then lcov --list coverage.info ; fi
- if [ "$COVERAGE" == 1 ]; then coveralls-lcov --repo-token "YJN4JZgnmetkInkggQWBYCNJn3cZelgsk" coverage.info ; fi
- if [ "$COVERAGE" == 1 ]; then cat coverage.info ; fi

