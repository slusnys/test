#
# Copyright (c) 2012-2015 Krzysztof Jusiak (krzysztof at jusiak dot net)
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
language: c++
sudo: false
env:
  global:
  - secure: "A27gNApbElRr3fqZXifVPKkB+xbxMYDFINGk2RDqul1X1Zg51M7e+ohHO9BwhEYiOGmCnFfbsVUP11XyFIH6kzWmxw9mhy8YDglbYfeyu6grxtU3mHElz8W7wO5OCPFPWXQf23sVYE8AWyjj6M+t3oyLJhPXCcYI7uMHEQm10CQ=" # GH_TOKEN
  - secure: "S1svDigJfTlkxkkp14OOiWje6nT1j06k3cAAvbnI6lNGbf1VxQlJ/Q5SAxEV8ITYvDnJGy/yaoT/tipa5pgFVJ2qpAx/zo8oWGfDAyBSk8LWzuocU5rShvq3eJDJW4199RSdGalXtS1C+7hohJNSy9QP4iODvQA5j90+fbCPdh0=" # BII_PASSWORD
  - secure: "eTBgFApNEFiNdpyV8wmGR0VQG8UgGOWBARyuGl7HPkz7A1pAMlUJM+U/kVSwSNqTroNThc223FSbQc6WM3DGXk+QPrOR7fdpKZSzlBAbbAN9BtpqDDbevTO22988t9rSzeyJhjVeUOpggww2GgyQqLiVdoGnLJzS7GWlYmhbtcM=" # COVERALLS_REPO_TOKEN
  - BII_USER=krzysztofjusiak
  - VALGRIND=--memcheck="valgrind --leak-check=full --error-exitcode=1"

branches:
  except:
    - gh-pages
    - benchmarks

matrix:
  fast_finish: true
  include:
  - os: linux
    env: DOCUMENTATION=ON
    addons:
      apt:
        packages:
        - xsltproc
  - os: linux
    env: TOOLSET=clang-3.4 MEMCHECK=${VALGRIND} BENCHMARK=QUICK COMPILER=/usr/local/clang-3.4/bin/clang++
    addons:
      apt:
        packages:
        - clang-3.4
        - libstdc++-5-dev
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.4
  - os: linux
    env: TOOLSET=clang-3.4 MEMCHECK=${VALGRIND} LIBCXX=ON COMPILER=/usr/local/clang-3.4/bin/clang++
    addons:
      apt:
        packages:
        - clang-3.4
        - libstdc++-5-dev
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.4
  - os: linux
    env: TOOLSET=clang-3.4 VARIANT=analyze COMPILER=/usr/local/clang-3.4/bin/clang++
    addons:
      apt:
        packages:
        - clang-3.4
        - libstdc++-5-dev
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.4
  - os: linux
    env: TOOLSET=clang-3.5 MEMCHECK=${VALGRIND} BENCHMARK=QUICK COMPILER=clang++-3.5
    addons:
      apt:
        packages:
        - clang-3.5
        - libstdc++-5-dev
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.5
  - os: linux
    env: TOOLSET=clang-3.5 MEMCHECK=${VALGRIND} LIBCXX=ON COMPILER=clang++-3.5
    addons:
      apt:
        packages:
        - clang-3.5
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.5
  - os: linux
    env: TOOLSET=clang-3.6 MEMCHECK=${VALGRIND} BENCHMARK=QUICK COMPILER=clang++-3.6
    addons:
      apt:
        packages:
        - clang-3.6
        - libstdc++-5-dev
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.6
  - os: linux
    env: TOOLSET=clang-3.6 MEMCHECK=${VALGRIND} LIBCXX=ON COMPILER=clang++-3.6
    addons:
      apt:
        packages:
        - clang-3.6
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.6
  - os: linux
    env: TOOLSET=clang-3.7 MEMCHECK=${VALGRIND} BENCHMARK=QUICK COMPILER=clang++-3.7
    addons:
      apt:
        packages:
        - clang-3.7
        - libstdc++-5-dev
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.7
  - os: linux
    env: TOOLSET=clang-3.7 MEMCHECK=${VALGRIND} LIBCXX=ON COMPILER=clang++-3.7
    addons:
      apt:
        packages:
        - clang-3.7
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.7
  - os: linux
    env: CMAKE=ON COMPILER=clang++-3.7
    addons:
      apt:
        packages:
        - clang-3.7
        - libstdc++-5-dev
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.7
  - os: linux
    env: TOOLSET=clang-3.8 MEMCHECK=${VALGRIND} BENCHMARK=QUICK COMPILER=clang++-3.8
    addons:
      apt:
        packages:
        - clang-3.8
        - libstdc++-5-dev
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise
  - os: linux
    env: TOOLSET=clang-3.8 MEMCHECK=${VALGRIND} LIBCXX=ON COMPILER=clang++-3.8
    addons:
      apt:
        packages:
        - clang-3.8
        - valgrind
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise
  - os: linux
    env: CMAKE=ON COMPILER=clang++-3.8
    addons:
      apt:
        packages:
        - clang-3.8
        - libstdc++-5-dev
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise
  - os: linux
    env: TOOLSET=gcc-5 GCOV=gcov-5 VARIANT=coverage MEMCHECK=${VALGRIND} BIICODE=ON COMPILER=g++-5
    addons:
      apt:
        packages:
        - g++-5
        - libstdc++-5-dev
        - valgrind
        - gdb
        sources:
        - ubuntu-toolchain-r-test
  - os: linux
    env: TOOLSET=gcc-5 VARIANT=analyze COMPILER=g++-5
    addons:
      apt:
        packages:
        - g++-5
        - libstdc++-5-dev
        - gdb
        sources:
        - ubuntu-toolchain-r-test
  - os: linux
    env: TOOLSET=gcc-5 BENCHMARK=QUICK COMPILER=g++-5
    addons:
      apt:
        packages:
        - g++-5
        - libstdc++-5-dev
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
  - os: linux
    env: CMAKE=ON BENCHMARK=ON COMPILER=g++-5
    addons:
      apt:
        packages:
        - g++-5
        - libstdc++-5-dev
        - gdb
        - bc
        sources:
        - ubuntu-toolchain-r-test
  - os: osx
    env: TOOLSET=clang COMPILER=clang++
  - os: osx
    env: CMAKE=ON COMPILER=clang++
  - os: osx
    osx_image: xcode7
    env: TOOLSET=clang COMPILER=clang++
  - os: osx
    osx_image: xcode7
    env: CMAKE=ON BENCHMARK=ON COMPILER=clang++

before_script:
- git config --global user.name "Travis-CI"
- git config --global user.email "travis@ci.net"
- git config --global push.default simple
- (cd build && ./bootstrap.sh)

before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then (brew install cmake); fi

install:
- export CXX="${COMPILER}"
- if [ "${LIBCXX}" != "" ]; then (svn --quiet co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx
  && cd libcxx/lib && ./buildit && ln -f -s libc++.so.1.0 libc++.so.1)
  && export CXXFLAGS="-stdlib=libc++ -I${TRAVIS_BUILD_DIR}/libcxx/include"
  && export LDFLAGS="-L${TRAVIS_BUILD_DIR}/libcxx/lib -lc++"
  && export LD_LIBRARY_PATH="${TRAVIS_BUILD_DIR}/libcxx/lib:$LD_LIBRARY_PATH"; fi

script:
- if [ "${TOOLSET}" != "" ]; then (cd test && ../build/b2 -sBOOST_ROOT=../build -j2
  -q --toolset=${TOOLSET} debug-symbols=off ${VARIANT} ${MEMCHECK} cxxflags=" $CXXFLAGS" linkflags=" $LDFLAGS"); fi
- if [ "${TOOLSET}" != "" ]; then (cd example && ../build/b2 -sBOOST_ROOT=../build
  -j2 -q --toolset=${TOOLSET} debug-symbols=off ${MEMCHECK} cxxflags=" $CXXFLAGS" linkflags=" $LDFLAGS"); fi
- if [ "${CMAKE}" != "" ]; then (cd build && cmake
  .. && cmake --build . && travis_wait ctest --output-on-failure); fi
- if [ "${TRAVIS_BRANCH}" == "cpp14" ] && [ "${DOCUMENTATION}" != "" ]; then (git
  clone --quiet --recursive --depth=1 --single-branch https://github.com/boostorg/boost.git
  && cd boost && ./bootstrap.sh && ./b2 headers && mkdir libs/di && cp -r ../build ../doc ../example ../include libs/di
  && cd libs/di/doc && ../build/b2 -sBOOST_ROOT=../build && TRY_IT_ONLINE=ON scripts/update_html.sh
  && git clone https://github.com/krzysztof-jusiak/di.git
  && cd di && git checkout -b gh-pages -t origin/gh-pages && git reset --hard
  && rm -rf cpp14/boost/libs/di/doc/html && cp -r ../html cpp14/boost/libs/di/doc
  && git add -A . && git commit -am "update" && git push --force --quiet
  "https://${GH_TOKEN}@github.com/krzysztof-jusiak/di"); fi

after_success:
- if [ "${TRAVIS_BRANCH}" == "cpp14" ] && [ "${VARIANT}" == "coverage" ]; then (pip
  install --user travis requests[security] cpp-coveralls && coveralls -r . -b test/ --gcov /usr/bin/${GCOV}
  --repo-token "${COVERALLS_REPO_TOKEN}"); fi
- if [ "${BENCHMARK}" != "" ]; then (git
  clone https://github.com/krzysztof-jusiak/di.git benchmarks
  && cd benchmarks && git checkout -b benchmarks -t origin/benchmarks
  && find ../build/test ../test -iname "*.json" | xargs -I% cp % . && git add -A . && git commit -am "update"
  && git push --force --quiet "https://${GH_TOKEN}@github.com/krzysztof-jusiak/di"); fi
- if [ "${TRAVIS_BRANCH}" == "cpp14" ] && [ "${BIICODE}" != "" ]; then (mkdir biicode && cd biicode
  && wget https://s3.amazonaws.com/biibinaries/release/3.3/bii-ubuntu-64_3_3.deb
  && dpkg -x bii-ubuntu-64_3_3.deb . && export PATH=$PWD/opt/biicode:$PATH && bii init di
  && cd di && bii new krzysztofjusiak/di && cd blocks/krzysztofjusiak/di
  && git clone https://github.com/krzysztof-jusiak/di.git .
  && bii user "${BII_USER}" -p "${BII_PASSWORD}" && bii publish -r); fi

notifications:
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/743f46341bea58bbe3ca
  on_success: change
  on_failure: always
  on_start: false

